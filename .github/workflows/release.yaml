name: release
on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: x86_64-unknown-linux-musl
          override: true

      - name: Add extra toolchain
        run: rustup target add armv7-unknown-linux-musleabihf

      - name: Build amd64
        uses: actions-rs/cargo@v1
        env:
          CC: clang
          RUSTFLAGS: "-C linker=rust-lld -C linker-flavor=ld.lld"
        with:
          command: build
          args: --release --target x86_64-unknown-linux-musl

      - name: Build ARMv7
        uses: actions-rs/cargo@v1
        env:
          CC: clang
          RUSTFLAGS: "-C linker=rust-lld -C linker-flavor=ld.lld"
        with:
          command: build
          args: --release --target armv7-unknown-linux-musleabihf

      - name: Create distribution dir
        run: mkdir ./dist

      - name: Copy amd64 binary
        run: cp ./target/x86_64-unknown-linux-musl/release/cpubars ./dist/cpubars-linux-amd64

      - name: Copy ARMv7 binary
        run: cp ./target/armv7-unknown-linux-musleabihf/release/cpubars ./dist/cpubars-linux-armv7

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: build-linux
          path: ./dist

  make-release:
    name: make-release
    runs-on: ubuntu-latest
    needs: ['build']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - uses: actions/download-artifact@v1
        with:
          name: build-linux
          path: dist
      - run: ls -all ./dist

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false

      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/cpubars-linux-amd64
          asset_name: cpubars-linux-amd64
          asset_content_type: application/octet-stream

      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/cpubars-linux-armv7
          asset_name: cpubars-linux-armv7
          asset_content_type: application/octet-stream

